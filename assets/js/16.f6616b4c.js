(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{547:function(t,a,s){"use strict";s.r(a);var r=s(8),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"复杂度量级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复杂度量级"}},[t._v("#")]),t._v(" 复杂度量级")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://mubu.com/document_image/52c47da7-83a2-4546-ac7a-79f1953b769a-676462.jpg",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"线性图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线性图"}},[t._v("#")]),t._v(" 线性图")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://mubu.com/document_image/f05e720a-212f-4859-9e5f-d0f2d337de89-676462.jpg",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"计算技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#计算技巧"}},[t._v("#")]),t._v(" 计算技巧")]),t._v(" "),s("ul",[s("li",[t._v("只关注循环执行次数最多的一段代码")]),t._v(" "),s("li",[s("strong",[t._v("加法原则")]),t._v(": 总复杂度等于量级最大的那段代码的复杂度")]),t._v(" "),s("li",[s("strong",[t._v("乘法原则")]),t._v(": 嵌套代码的复杂度等于嵌套内外代码复杂度的乘积")])])])}),[],!1,null,null,null);a.default=e.exports}}]);